name: Timblo BO

on:
  push:
    branches: [ "main", "develop" ]
  pull_request:
    branches: [ "main", "develop" ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [22.x]
        pnpm-version: [10]

    steps:
      - uses: actions/checkout@v3

      - name: .env.dev
        run: |
          echo "DB_TYPE=\"${{ secrets.DB_TYPE }}\" > .env.dev
          echo "DB_HOST=\"${{ secrets.DB_HOST }}\" >> .env.dev
          echo "DB_PORT=\"${{ secrets.DB_PORT }}\" >> .env.dev
          echo "DB_USERNAME=\"${{ secrets.DB_USERNAME }}\" >> .env.dev
          echo "DB_PASSWORD=\"${{ secrets.DB_PASSWORD }}\" >> .env.dev
          echo "DB_DATABASE=\"${{ secrets.DB_DATABASE }}\" >> .env.dev

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ matrix.pnpm-version }}
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-


      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build project
        run: pnpm build

  wait-for-approval:
    needs: build
    runs-on: ubuntu-latest
    environment: 'dev'
    steps:
      - name: Waiting for approval
        run: echo "Approved by us"

  publish:
    needs: wait-for-approval
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest

  deploy:
    needs: [publish]
    runs-on: self-hosted
    steps:
      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
        
      - name: Pull latest image
        run: docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
        
      - name: Stop existing container
        run: |
          docker stop taste-cicd-nestjs || true
          docker rm taste-cicd-nestjs || true
        continue-on-error: true
        
      - name: Run new container
        run: |
          docker run -d --name taste-cicd-nestjs -p 3001:3000 ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
